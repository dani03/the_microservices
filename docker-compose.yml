version: "3.8"
services:
  # nginx server
  server_nginx:
    container_name: server_nginx
    image: "nginx:stable-alpine"
    ports:
      - "4000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./car-parking:/var/www/html
    depends_on:
      - mysql_container
      - php

  # container php
  php:
    container_name: php
    build:
      context: ./car-parking
    volumes:
      - ./car-parking:/var/www/html:delegated
    ports:
      - 3000:9000
    image: dani03/php-for-microservices

  # le container de base de donn√©es
  mysql_container:
    container_name: mysql_container
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=car_parking
    volumes:
      - db-datas:/var/lib/mysql
    ports:
      - 3306:3306
    depends_on:
      - phpmyadmin

  #phpmyAdmin
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    ports:
      - 8089:80
  # le container vue JS
  vue_js:
    container_name: vue_js
    build:
      context: ./front-car-parking
    volumes:
      - ./front-car-parking:/usr/src/app/my-app
    ports:
      - 2000:2000
    depends_on:
      - php

  #composer service
  composer:
    build:
      context: dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./car-parking:/var/www/html

  # le container artisan
  artisan:
    build:
      context: ./car-parking
    image: dani03/laravel-artisan-cli
    volumes:
      - ./car-parking:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]

  #le container npm
  npm:
    image: node:18
    working_dir: /var/www/html
    entrypoint: ["npm"]

volumes:
  db-datas: ~
